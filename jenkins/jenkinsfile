pipeline {
    agent : any
    parameters {
        booleanParam(name: 'CHECKOUT', defaultValue: true, description: 'Toggle this value')
        booleanParam(name: 'BUILD', defaultValue: true, description: 'Toggle this value')
        booleanParam(name: 'TEST', defaultValue: true, description: 'Toggle this value')
        booleanParam(name: 'DEPLOY', defaultValue: false, description: 'Toggle this value')
    }
    
    stages {
         stage('Checkout') {
             when {
                expresssion{
                    param.CHECKOUT== true
                }
             }
             steps {
                checkout ([
                $class: 'GitSCM',
                Branches: [[name: '*/main']],
                userRemoteConfigs: [[ url: '<put git ulr>',
                credentials: 'github'
                ]]])
            }
         }
          stage('demo') {
             steps {
                // THIS IS ACCESSING CREDENTIALS TYPE USERNAME AND PASSWORD
                withCredentials([usernamePassword(credentialId: 'test_ID', usernameVariable: 'USER' passwordVariable: 'password')]){
                     sh '''
                            echo USER
                            echo password    //PASSWORD WILL NOT PRINT
                        '''
                }

                // THIS IS ACCESSING CREDENTIALS TYPE SECRATE TEXT
                withCredentials([string (credentialId: 'test_ID', Variable: 'USER')]){
                     sh '''
                            cat USER
                        '''
                }

                // THIS IS ACCESSING CREDENTIALS TYPE FILE
                withCredentials([file (credentialId: 'test_ID', Variable: 'FILE_PATH')]){
                     sh '''
                            cat FILE_PATH
                        '''
                }

                / THIS IS ACCESSING CREDENTIALS TYPE SSH PRIVATE KEY
                withCredentials([sshUserPrivateKey (credentialId: 'ssh_peam', usarnameVariable: 'USER', keyFileVariable: 'SSH_KEY')]){
                         echo $USER  $SSH_KEY
                        sh '''
                            cat $USER
                        '''
                }
            }
         stage('Build') {
             steps {
                withCredentials()
                sh'''
                sudo apt update 
                sudo apt install -y maven
                ls-lrt
                cd <// file path>
                maven clean install
                '''
            }

        stage('test') {
             steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
                {
                    sh'''
                        sleep 5
                        exit 1
                    '''
                }
            }

        stage('Deploy') {
             steps {
                sh'''
                sleep 10
                '''
            }
         }
    } 
}
